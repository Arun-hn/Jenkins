Create EC2 Instance with Jenkins, git, Docker, AWS CLI, Installed.
In jenkins Installed plugins AWS Credentials, Git , DOcker pipeline plugins.
Add your AWS Access key and secret ket in jenkins global credentials.
Create pipeline with Jenkinsfile provided here.


Install and Configure Git Webhook Plugin:
If you haven't already, install the "Git Webhook" plugin in your Jenkins instance. You can do this by going to "Manage Jenkins" > "Manage Plugins" > "Available" and searching for "Git Webhook".

Generate Webhook URL in Jenkins:
After installing the plugin, follow these steps:

Open your Jenkins pipeline job.
In the pipeline configuration, you'll find a section related to the Git Webhook plugin.
Enable the webhook and configure the events that should trigger the pipeline (e.g., Push, Pull Request).
Jenkins will generate a webhook URL for you. Copy this URL.
Configure Webhook in Git Repository:
In your Git repository (e.g., GitHub), follow these steps:

Go to your repository's settings.
Find the "Webhooks" section.
Add a new webhook.
Paste the webhook URL generated by Jenkins in the "Payload URL" field.
Configure the webhook settings, such as the events that should trigger it (e.g., "Just the push event").
Save the webhook.
Now, whenever the configured Git events (e.g., push) occur in your repository, the Git Webhook plugin will notify Jenkins, and your pipeline will be triggered.

Your pipeline code, as previously provided, should work in conjunction with the Git Webhook plugin. Each time a relevant Git event is detected by the webhook, the corresponding pipeline stages will be executed automatically.

Remember to adapt these instructions based on the specific Git Webhook plugin version and the Git repository platform you're using (e.g., GitHub, GitLab).



